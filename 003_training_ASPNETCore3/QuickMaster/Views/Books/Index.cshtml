@model IEnumerable<QuickMaster.Models.Book>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @* 
                 ラムダ式でmodel => model.Title などのように記述することで、
                 プロパティのデータ型に合わせてフォーマットされた出力にすることができる
                *@
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Publisher)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sample)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Publisher)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sample)
            </td>
            <td>
                @* 
                    ビューヘルパーの利用例(ハイパーリンク生成)
                    asp-actionでアクションメソッドを指定し、
                    asp-route-id でURL内のid パラメータを指定する
                    コントローラは指定していないので、デフォルトのBooksのまま
                    id=3 のレコードのEdit ページへのリンクの場合、
                    /Books/Edit/3 のようなhref属性が生成される
                *@
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
